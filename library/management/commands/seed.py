import random

from library.models import Author, Book, Publisher, Store

from django.contrib.auth import get_user_model
from django.core.management.base import BaseCommand
from django.utils import timezone

from faker import Faker

fake = Faker()
UserModel = get_user_model()


class Command(BaseCommand):
    def add_arguments(self, parser):
        parser.add_argument('arg', type=int)

    def handle(self, *args, **options):
        Author.objects.all().delete()
        Publisher.objects.all().delete()
        Book.objects.all().delete()
        Store.objects.all().delete()

        num = options['arg']
        # create  authors
        authors = [Author(name=fake.name(), age=random.randint(20, 70)) for _ in range(int(num))]
        Author.objects.bulk_create(authors)

        # create  publishers
        publishers = [Publisher(name=fake.company()) for _ in range(int(num))]
        Publisher.objects.bulk_create(publishers)

        # create books for every publishers
        for publisher in Publisher.objects.all():
            books = [Book(
                name=fake.sentence(),
                price=random.uniform(29.99, 225.9),
                pages=random.randint(50, 300),
                rating=round(random.uniform(1, 5), 2),
                pubdate=timezone.now(),
                publisher=publisher, )
                for _ in range(20)]
            Book.objects.bulk_create(books)
        # create  stores and insert books in every store
        books = Book.objects.all()
        for _ in range(int(num)):
            store = Store.objects.create(name=fake.company())
            store.books.set(books)
            store.save()

        books_id = list(Book.objects.values_list('id', flat=True))
        authors_id = Author.objects.values_list('id', flat=True)
        book_count = Book.objects.count()

        for author_id in authors_id:
            books = []
            random.shuffle(books_id)

            rand_num_book = random.randint(0, book_count)
            book_book = books_id[:rand_num_book]

            for book_id in book_book:
                # through is the table generated by django to link m2m between Book and Author
                book = Book.authors.through(book_id=book_id, author_id=author_id)
                books.append(book)

        Book.authors.through.objects.bulk_create(books, batch_size=7000)